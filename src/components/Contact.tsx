import React, { useState, useEffect } from 'react';
import { useForm } from "react-hook-form";

import { MapIcon, EnvelopeIcon, PhoneIcon } from "@heroicons/react/24/outline";

// –ò–º–ø–æ—Ä—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π QR-–∫–æ–¥–æ–≤
import telegramQR from './assets/telegram-qr.png';
import whatsappQR from './assets/whatsapp-qr.png';

type Info = {
  access_key: string;
  subject: string;
  from_name: string;
  botcheck: string;
  name: string;
  email: string;
  message: string;
  topic: string;
  orderNumber: string;
};

export default function Contact() {
  const {
    register,
    watch,
    handleSubmit,
    reset,
    formState: { errors, isSubmitSuccessful, isSubmitting },
  } = useForm<Info>({
    mode: "onSubmit",
  });
  
  const [isSuccess, setIsSuccess] = useState(false);
  const [message, setMessage] = useState(''); // –ò—Å–ø–æ–ª—å–∑—É–µ–º camelCase –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
  const [selectedTopic, setSelectedTopic] = useState('');

  const handleTopicChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    setSelectedTopic(e.target.value);
  };

  const topic = watch("topic");

  useEffect(() => {
    setSelectedTopic(topic);
  }, [topic]);

  const getMessagePlaceholder = (topic: string) => {
    switch (topic) {
      case "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–∏–±–æ—Ä–∞":
        return "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ø—Ä–∏–±–æ—Ä–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —Ç–∞–∫—É—é –∫–∞–∫ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞, —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä, ACTIVATION ID –∏ —Ç.–ø.";
      case "–ü–æ–º–æ—â—å —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ü–û":
        return "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –£—Ç–æ—á–Ω–∏—Ç–µ –º–æ–¥–µ–ª—å –ø—Ä–∏–±–æ—Ä–∞ –∏ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –º—ã –º–æ–∂–µ–º —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏ –¥–ª—è –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ü–û.";
      case "–ó–∞–∫–∞–∑ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è":
        return "–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –ø—Ä–∏–±–æ—Ä–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–∫ —Å –Ω–∞—à–∏—Ö —Å–∫–ª–∞–¥–æ–≤ –≤ –ú–æ—Å–∫–≤–µ, —Ç–∞–∫ –∏ –Ω–∞–ø—Ä—è–º—É—é –æ—Ç –ª—É—á—à–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏–∑ –ö–∏—Ç–∞—è. –£ –Ω–∞—Å –µ—Å—Ç—å –≤—Å—ë, —á—Ç–æ –≤–∞–º –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è, –∏ —ç—Ç–æ –ø–æ –ª—É—á—à–∏–º —Ü–µ–Ω–∞–º. –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, —á—Ç–æ–±—ã —É—Ç–æ—á–Ω–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏.";
      default:
        return "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ";
    }
  };

  const htmlLinkToTerms = `–Ø –ø—Ä–æ—á–∏—Ç–∞–ª –∏ —Å–æ–≥–ª–∞—Å–µ–Ω —Å <a href="#!" onclick="showPopup()" class="terms-link" style="color: inherit; text-decoration: inherit;">–ø—Ä–∞–≤–∏–ª–∞–º–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a>.`;

  const onSubmit = async (data: any, e: any) => {
    console.log(data);
    await fetch("https://api.web3forms.com/submit", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: JSON.stringify(data, null, 2),
    })
      .then(async (response) => {
        let json = await response.json();
        if (json.success) {
          setIsSuccess(true);
          setMessage(json.message);
          e.target.reset();
          reset();
        } else {
          setIsSuccess(false);
          setMessage(json.message);
        }
      })
      .catch((error) => {
        setIsSuccess(false);
        setMessage("Client Error. Please check the console.log for more info");
        console.log(error);
      });
  };

  return (
    <div className="bg-white-50 dark:bg-neutral-900" id="contact">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-16 text-center">
        <h2 className="text-4xl font-bold">–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üì©</h2>

        <p className="pt-6 pb-6 text-base max-w-2xl text-center m-auto dark:text-neutral-400">
          –ú—ã –æ—á–µ–Ω—å —Ü–µ–Ω–∏–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏! –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∏–∂–µ, –∏–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä–∞–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã, –∏ –º—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 12 —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤.
        </p>
      </div>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-8 pb-16 grid md:grid-cols-2 lg:grid-cols-2 gap-y-8 md:gap-x-8 md:gap-y-8 lg:gap-x-8 lg:gap-y-16">
        <div>
          <h2 className="text-lg font-bold text-center">üí¨ –ú—ã –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞—Ö!</h2>
          <p className="max-w mt-4 mb-4 dark:text-neutral-400 text-center">
            üïë <strong>–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏:</strong><br />
            <span className="block mt-2">–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞: 10:00 - 19:00 (–ú–°–ö)</span>
            <span className="block mt-2">–°—É–±–±–æ—Ç–∞ - –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: 10:00 - 18:00 (–ú–°–ö)</span><br />
            üí¨ <strong>–ú—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ Telegram –∏ WhatsApp:</strong>
          </p>

          <div className="flex justify-center mt-2 text-dark-600 dark:text-neutral-400">
            <div className="flex flex-col items-center space-y-2 mx-4">
              <div className="flex items-center space-x-2">
                <div className="text-2xl">
                  <i className="fab fa-telegram"></i>
                </div>
                <div>
                  <a href="https://t.me/MilerdTest" className="dark:text-neutral-300 underline">
                    Telegram
                  </a>
                </div>
                {/* –í—Å—Ç–∞–≤–∫–∞ QR-–∫–æ–¥–∞ –¥–ª—è Telegram */}
                <img src={telegramQR} alt="Telegram QR Code" className="h-20 mt-2" />
              </div>
              <div className="flex items-center space-x-2">
                <div className="text-2xl">
                  <i className="fab fa-whatsapp"></i>
                </div>
                <div>
                  <a href="https://wa.me/79779158808" className="dark:text-neutral-300 underline">
                    WhatsApp
                  </a>
                </div>
                {/* –í—Å—Ç–∞–≤–∫–∞ QR-–∫–æ–¥–∞ –¥–ª—è WhatsApp */}
                <img src={whatsappQR} alt="WhatsApp QR Code" className="h-20 mt-2" />
              </div>
            </div>
          </div>

          <div className="mt-8 text-center dark:text-neutral-400">
            <p>
              üìç <strong>–ù–∞—à –æ—Ñ–∏—Å:</strong>
              <span className="block mt-2">—É–ª. –í–∞–≤–∏–ª–æ–≤–∞, –¥. 4, –æ—Ñ–∏—Å 213, –ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è</span>
            </p>
            <p className="mt-4">
              ‚úâÔ∏è <strong>–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞:</strong>
              <span className="block mt-2">
                <a href="mailto:support@milerd.ru" className="dark:text-neutral-300 underline">
                  support@milerd.ru
                </a>
              </span>
            </p>
            <p className="mt-4">
              ‚òéÔ∏è <strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong>
              <span className="block mt-2">
                <a href="tel:+79779158808" className="dark:text-neutral-300 underline">
                  +7 977 915-88-08
                </a>
              </span>
            </p>
          </div>
        </div>

        <div>
          <div className="bg-white dark:bg-neutral-800 shadow-lg rounded-md p-6 lg:p-10">
            <form onSubmit={handleSubmit(onSubmit)} noValidate>
              <input type="hidden" value="YOUR_ACCESS_KEY_HERE" {...register("access_key")}></input>
              
              <div className="grid grid-cols-1 gap-y-6">
                <div>
                  <label htmlFor="name" className="block mb-1 text-sm font-medium dark:text-neutral-300">
                    –ò–º—è
                  </label>
                  <input
                    id="name"
                    type="text"
                    placeholder="–í–∞—à–µ –∏–º—è"
                    autoComplete="off"
                    className={`form-input w-full dark:bg-neutral-900 dark:text-neutral-300 ${
                      errors.name ? "border-red-500" : ""
                    }`}
                    {...register("name", { required: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è" })}
                  />
                  {errors.name && (
                    <div className="mt-1 text-red-500 text-sm">
                      {errors.name.message}
                    </div>
                  )}
                </div>

                <div>
                  <label htmlFor="email" className="block mb-1 text-sm font-medium dark:text-neutral-300">
                    Email
                  </label>
                  <input
                    id="email"
                    type="email"
                    placeholder="–í–∞—à email"
                    autoComplete="off"
                    className={`form-input w-full dark:bg-neutral-900 dark:text-neutral-300 ${
                      errors.email ? "border-red-500" : ""
                    }`}
                    {...register("email", {
                      required: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à email",
                      pattern: {
                        value: /^\S+@\S+$/i,
                        message: "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email",
                      },
                    })}
                  />
                  {errors.email && (
                    <div className="mt-1 text-red-500 text-sm">
                      {errors.email.message}
                    </div>
                  )}
                </div>

                <div>
                  <label htmlFor="topic" className="block mb-1 text-sm font-medium dark:text-neutral-300">
                    –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –æ–±—Ä–∞—â–µ–Ω–∏—è
                  </label>
                  <select
                    id="topic"
                    className={`form-select w-full dark:bg-neutral-900 dark:text-neutral-300 ${
                      errors.topic ? "border-red-500" : ""
                    }`}
                    {...register("topic", { required: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É" })}
                    onChange={handleTopicChange}
                  >
                    <option value="" disabled>
                      –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É
                    </option>
                    <option value="–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–∏–±–æ—Ä–∞">–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–∏–±–æ—Ä–∞</option>
                    <option value="–ü–æ–º–æ—â—å —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ü–û">–ü–æ–º–æ—â—å —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ü–û</option>
                    <option value="–ó–∞–∫–∞–∑ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è">–ó–∞–∫–∞–∑ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</option>
                  </select>
                  {errors.topic && (
                    <div className="mt-1 text-red-500 text-sm">
                      {errors.topic.message}
                    </div>
                  )}
                </div>

                {selectedTopic === "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–∏–±–æ—Ä–∞" && (
                  <div>
                    <label htmlFor="orderNumber" className="block mb-1 text-sm font-medium dark:text-neutral-300">
                      –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞
                    </label>
                    <input
                      id="orderNumber"
                      type="text"
                      placeholder="–í–∞—à –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞"
                      autoComplete="off"
                      className={`form-input w-full dark:bg-neutral-900 dark:text-neutral-300 ${
                        errors.orderNumber ? "border-red-500" : ""
                      }`}
                      {...register("orderNumber", { required: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞" })}
                    />
                    {errors.orderNumber && (
                      <div className="mt-1 text-red-500 text-sm">
                        {errors.orderNumber.message}
                      </div>
                    )}
                  </div>
                )}

                <div>
                  <label htmlFor="message" className="block mb-1 text-sm font-medium dark:text-neutral-300">
                    –°–æ–æ–±—â–µ–Ω–∏–µ
                  </label>
                  <textarea
                    id="message"
                    placeholder={getMessagePlaceholder(selectedTopic)}
                    rows={4}
                    autoComplete="off"
                    className={`form-textarea w-full dark:bg-neutral-900 dark:text-neutral-300 ${
                      errors.message ? "border-red-500" : ""
                    }`}
                    {...register("message", { required: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ" })}
                  />
                  {errors.message && (
                    <div className="mt-1 text-red-500 text-sm">
                      {errors.message.message}
                    </div>
                  )}
                </div>

                <div>
                  <label htmlFor="terms" className="inline-flex items-center dark:text-neutral-300">
                    <input
                      type="checkbox"
                      className="form-checkbox dark:bg-neutral-900"
                      id="terms"
                      {...register("botcheck")}
                    />
                    <span
                      className="ml-2 text-sm"
                      dangerouslySetInnerHTML={{ __html: htmlLinkToTerms }}
                    ></span>
                  </label>
                  {errors.botcheck && (
                    <div className="mt-1 text-red-500 text-sm">
                      {errors.botcheck.message}
                    </div>
                  )}
                </div>

                <div className="mt-6">
                  <button
                    type="submit"
                    disabled={isSubmitting}
                    className={`px-4 py-2 w-full text-white bg-blue-600 rounded-md ${
                      isSubmitting ? "opacity-50 cursor-not-allowed" : ""
                    }`}
                  >
                    {isSubmitting ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"}
                  </button>
                </div>
              </div>
            </form>

            {isSubmitSuccessful && (
              <div className={`mt-4 ${isSuccess ? "text-green-500" : "text-red-500"}`}>
                {message}
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}
