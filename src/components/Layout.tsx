import Head from "next/head";
import { useRouter } from "next/router";
import Footer from "./Footer";
import Navbar from "./Navbar";
import { ReactNode } from "react";

interface LayoutProps {
  children: ReactNode;
  title?: string;
  description?: string;
  keywords?: string;
  image?: string;
  type?: string;
}

const Layout = ({ children, title, description, keywords, image, type }: LayoutProps) => {
  const router = useRouter();
  const meta = {
    title: title || "SmartDiag - –í–∞—à –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –≤ –º–∏—Ä–µ –∞–≤—Ç–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏",
    description: description || "SmartDiag –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —à–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π, –≤–∫–ª—é—á–∞—è Autocom CDP+, Delphi DS150E, VCDS. –ü—Ä–æ–≥—Ä–∞–º–º—ã –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ.",
    keywords: keywords || "–∞–≤—Ç–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, Autocom CDP+, Delphi DS150E, VCDS, –í–∞—Å—è, mucar, thinkdiag, Thinkcar, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π, –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏, car diagnostics, diagnostic tools, software for diagnostics, diagnostic equipment, vehicle diagnostics, diagnostic software, installation instructions, BMW, Audi, Mercedes, Toyota, Volkswagen, Ford, Nissan, Honda, Chevrolet, Kia",
    image: image || "/images/seo/halley-banner.png",
    type: type || "website",
  };

  const [isClient, setIsClient] = useState(false);
  const [currentHash, setCurrentHash] = useState(''); // –•—Ä–∞–Ω–∏–º —Ç–µ–∫—É—â–∏–π —è–∫–æ—Ä—å

  // –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –∏–∑–º–µ–Ω–∏—Ç–µ –µ–≥–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞
  const baseTitle = "–ö–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –æ—à–∏–±–∫–æ–π –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∞—Ä—Ö–∏–≤–∞";

  // –û–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ —Ç–µ–∫—Å—Ç–æ–≤ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é —Å —ç–º–æ–¥–∑–∏
  const titles = {
    '': 'üè† –í –Ω–∞—á–∞–ª–æ',
    'antivirus-issue': 'üõ°Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–æ–º',
    'outdated-software': '‚è≥ –£—Å—Ç–∞—Ä–µ–≤—à–µ–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ',
    'download-errors': 'üì• –û—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ',
    'yandex-tips': 'üåê –°–æ–≤–µ—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ø–Ω–¥–µ–∫—Å –ë—Ä–∞—É–∑–µ—Ä–∞',
    'support': 'üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞'
  } as const;

  useEffect(() => {
    setIsClient(true); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
  }, []);

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —è–∫–æ—Ä—è
  useEffect(() => {
    if (!isClient) return;

    const updateTitle = () => {
      const hash = router.asPath.split('#')[1] || '';
      const hashKey = hash as keyof typeof titles;
      const title = hashKey in titles ? `${baseTitle} | ${titles[hashKey]}` : baseTitle;
      document.title = title; 
      setCurrentHash(hash); 
    };

    updateTitle(); 

    const handleVisibilityChange = () => {
      if (document.visibilityState === 'visible') {
        updateTitle(); 
        document.title = router.asPath.split('#')[1] || '';
      }
    };

    document.addEventListener('visibilitychange', handleVisibilityChange);

    return () => {
      document.removeEventListener('visibilitychange', handleVisibilityChange);
    };
  }, [isClient, router.asPath]); 

  if (!isClient) return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null, –µ—Å–ª–∏ –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

  return (
    <>
      <Head>
        <title>{currentHash in titles ? `${baseTitle} | ${titles[currentHash as keyof typeof titles]}` : baseTitle}</title>
        <meta name="description" content={meta.description} />
        <meta name="keywords" content={meta.keywords} />
        <meta property="og:type" content={meta.type} />
        <meta property="og:url" content={`${process.env.NEXT_PUBLIC_SITE_URL}${router.asPath}`} />
        <meta property="og:title" content={meta.title} />
        <meta property="og:description" content={meta.description} />
        <meta property="og:image" content={meta.image} />
        <link rel="canonical" href={`${process.env.NEXT_PUBLIC_SITE_URL}${router.asPath}`} />
      </Head>
      <Navbar />
      <main>{children}</main>
      <Footer />
    </>
  );
};

export default Layout;
