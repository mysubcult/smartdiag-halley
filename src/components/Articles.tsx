import Image from "next/image";
import Link from "next/link";
import { useState, useMemo, useCallback } from "react";

const blogPosts = [
  { title: "–ö–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –æ—à–∏–±–∫–æ–π –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∞—Ä—Ö–∏–≤–∞", image: "/images/blog/post1.jpg", excerpt: "–£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç—ã–º–∏ –æ—à–∏–±–∫–∞–º–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∞—Ä—Ö–∏–≤–æ–≤ –∏ —á—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å —ç—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã.", link: "/blog/post1", category: "–û—à–∏–±–∫–∏" },
  { title: "–ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–ø—É—Å–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã", image: "/images/blog/post2.jpg", excerpt: "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–ª–∏ –∏—Å—á–µ–∑–∞—é—Ç —è—Ä–ª—ã–∫–∏? –†–µ—à–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã.", link: "/blog/post2", category: "–û—à–∏–±–∫–∏" },
  { title: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–∞ –¥—Ä—É–≥–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ", image: "/images/blog/post3.jpg", excerpt: "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∫–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö? –û—Ç–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.", link: "/blog/post3", category: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏" },
  { title: "–ü–æ–º–æ—â—å –≤ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è", image: "/images/blog/post4.jpg", excerpt: "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è. –ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏.", link: "/blog/post4", category: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û" },
  { title: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º –∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å—ã", image: "/images/blog/post5.jpg", excerpt: "–ö–∞–∫ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω–æ–µ –ü–û –º–æ–∂–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ –≤–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è.", link: "/blog/post5", category: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å" },
  { title: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –Ω–∞—à–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º", image: "/images/blog/post6.jpg", excerpt: "–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ —Å–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.", link: "/blog/post6", category: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏" },
  { title: "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –ª—É—á—à–µ–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω–æ–µ –ü–û –¥–ª—è –≤–∞—à–µ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞", image: "/images/blog/post7.jpg", excerpt: "–£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫–æ–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω–æ–µ –ü–û –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –¥–ª—è –≤–∞—Å –∏ –∫–∞–∫ –µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å.", link: "/blog/post7", category: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å" },
  { title: "–ö–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –∑–∞–≤–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤–æ –≤—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏", image: "/images/blog/post8.jpg", excerpt: "–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∑–∞–≤–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–∞–º–º –≤–æ –≤—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏.", link: "/blog/post8", category: "–û—à–∏–±–∫–∏" },
  { title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±–ª–∞—á–Ω—ã—Ö —Ö—Ä–∞–Ω–∏–ª–∏—â –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è", image: "/images/blog/post9.jpg", excerpt: "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –æ–±–ª–∞—á–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏ –¥–∞–Ω–Ω—ã—Ö.", link: "/blog/post9", category: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏" },
  { title: "–û–±–∑–æ—Ä –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Ä—Ö–∏–≤–∞–º–∏", image: "/images/blog/post10.jpg", excerpt: "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Ä—Ö–∏–≤–∞–º–∏ –∏ –∏—Ö –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.", link: "/blog/post10", category: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏" },
];

export default function Blog() {
  const [selectedCategory, setSelectedCategory] = useState("–í—Å–µ");
  const [currentPage, setCurrentPage] = useState(1);
  const postsPerPage = 4;

  const categories = useMemo(() => [
    { name: "–í—Å–µ", value: "–í—Å–µ" },
    { name: "–û—à–∏–±–∫–∏", value: "–û—à–∏–±–∫–∏" },
    { name: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û", value: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û" },
    { name: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", value: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å" },
    { name: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", value: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏" },
  ], []);

  const filteredPosts = useMemo(() => {
    return selectedCategory === "–í—Å–µ"
      ? blogPosts
      : blogPosts.filter((post) => post.category === selectedCategory);
  }, [selectedCategory]);

  const totalPages = Math.ceil(filteredPosts.length / postsPerPage);

  const paginatedPosts = useMemo(() => {
    const startIndex = (currentPage - 1) * postsPerPage;
    return filteredPosts.slice(startIndex, startIndex + postsPerPage);
  }, [currentPage, filteredPosts]);

  const handleCategoryClick = useCallback((category) => {
    setSelectedCategory(category);
    setCurrentPage(1); // Reset page when category changes
  }, []);

  const handlePageChange = useCallback((page) => {
    setCurrentPage(page);
  }, []);

  const renderCategoryButton = useCallback(
    (category) => (
      <button
        key={category.value}
        onClick={() => handleCategoryClick(category.value)}
        className={`${
          category.value === selectedCategory
            ? "bg-white dark:bg-neutral-600 text-neutral-900 dark:text-neutral-100"
            : "text-neutral-900 dark:text-neutral-400 hover:bg-white dark:hover:bg-neutral-700"
        } rounded-md py-2 px-4 whitespace-nowrap transition-colors duration-300 ease-in-out`}
      >
        {category.name}
      </button>
    ),
    [handleCategoryClick, selectedCategory]
  );

  const renderPageButton = useCallback(
    (page) => (
      <button
        key={page}
        onClick={() => handlePageChange(page)}
        className={`${
          page === currentPage
            ? "bg-white dark:bg-neutral-600 text-neutral-900 dark:text-neutral-100"
            : "text-neutral-900 dark:text-neutral-400 hover:bg-white dark:hover:bg-neutral-700"
        } rounded-md py-2 px-4 whitespace-nowrap transition-colors duration-300 ease-in-out`}
      >
        {page}
      </button>
    ),
    [handlePageChange, currentPage]
  );

  return (
    <div className="bg-gray-50 dark:bg-neutral-900" id="blog">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-16">
        <h2 className="text-4xl font-bold text-center">–°—Ç–∞—Ç—å–∏ üì∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)</h2>
        <p className="pt-6 text-base max-w-2xl text-center m-auto dark:text-neutral-400">
          –í –Ω–∞—à–µ–º –±–ª–æ–≥–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ —Å–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –Ω–∞—à–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ —É—Å–ª—É–≥.
        </p>
      </div>

      <div className="max-w-max mx-auto px-6">
        {/* –ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
        <div className="relative text-base font-semibold mt-6 bg-neutral-200 dark:bg-neutral-800 rounded-lg inline-flex flex-col sm:flex-row sm:flex-wrap justify-center sm:mt-8 p-1 gap-1">
          {categories.map(renderCategoryButton)}
        </div>
      </div>

      {/* –°–µ—Ç–∫–∞ —Å—Ç–∞—Ç–µ–π */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-16 pb-16 grid md:grid-cols-2 lg:grid-cols-4 gap-x-6 gap-y-16">
        {paginatedPosts.map(({ title, image, excerpt, link }) => (
          <div
            key={title}
            className="rounded-lg overflow-hidden flex flex-col border-neutral-300 border dark:border-neutral-600 hover:bg-neutral-100 dark:hover:bg-neutral-700 hover:shadow-lg transition-all duration-300"
          >
            <Link href={link}>
              <div className="relative">
                <Image
                  src={image}
                  alt={title}
                  layout="responsive"
                  width={400}
                  height={225}
                  className="w-full object-cover"
                  priority={title === paginatedPosts[0].title}
                  placeholder="blur"
                  blurDataURL="/images/placeholder.png"
                />
              </div>
            </Link>
            <div className="p-4 flex flex-col flex-grow">
              <h3 className="text-lg font-semibold mb-6 line-clamp-3 h-16">
                {title}
              </h3>
              <p className="text-sm text-neutral-600 dark:text-neutral-400 mb-4 flex-grow">
                {excerpt}
              </p>
              <div className="flex justify-end mt-auto">
                <Link href={link}>
                  <button className="bg-red-600 text-white text-sm rounded-md px-4 py-2 transition-colors duration-300 hover:bg-red-500">
                    –ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ
                  </button>
                </Link>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
      <div className="max-w-max mx-auto px-6 pb-16">
        <div className="relative text-base font-semibold mt-6 bg-neutral-200 dark:bg-neutral-800 rounded-lg inline-flex flex-col sm:flex-row sm:flex-wrap justify-center sm:mt-8 p-1 gap-1">
          {Array.from({ length: totalPages }, (_, i) => i + 1).map(renderPageButton)}
        </div>
      </div>
    </div>
  );
}
