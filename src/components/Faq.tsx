import Image from "next/image";
import Link from "next/link";
import { useState, useMemo, useCallback } from "react";

const blogPosts = [
  {
    title: "–ö–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –æ—à–∏–±–∫–æ–π –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∞—Ä—Ö–∏–≤–∞",
    image: "/images/blog/post1.jpg",
    excerpt:
      "–£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç—ã–º–∏ –æ—à–∏–±–∫–∞–º–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∞—Ä—Ö–∏–≤–æ–≤ –∏ —á—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å —ç—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã.",
    link: "/blog/post1",
    category: "–û—à–∏–±–∫–∏",
  },
  // –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ—Å—Ç—ã
];

const categories = [
  { name: "–í—Å–µ", value: "–í—Å–µ" },
  { name: "–û—à–∏–±–∫–∏", value: "–û—à–∏–±–∫–∏" },
  // –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
];

function classNames(...classes) {
  return classes.filter(Boolean).join(" ");
}

export default function Blog() {
  const [selectedCategory, setSelectedCategory] = useState("–í—Å–µ");
  const [isOpen, setIsOpen] = useState(false);

  const filteredPosts = useMemo(
    () =>
      selectedCategory === "–í—Å–µ"
        ? blogPosts
        : blogPosts.filter((post) => post.category === selectedCategory),
    [selectedCategory]
  );

  const handleCategoryClick = useCallback(
    (category) => {
      setSelectedCategory(category);
      setIsOpen(false);
    },
    []
  );

  const renderCategoryButton = (category) => (
    <button
      key={category.value}
      onClick={() => handleCategoryClick(category.value)}
      className={classNames(
        category.value === selectedCategory
          ? "bg-red-500 text-white"
          : "text-gray-700 dark:text-gray-200 hover:bg-red-500 hover:text-white",
        "rounded-full m-2 py-2 px-6 transition-colors duration-300 ease-in-out"
      )}
    >
      {category.name}
    </button>
  );

  return (
    <div className="bg-white dark:bg-neutral-900 w-full px-6 py-16" id="blog">
      <h2 className="text-4xl font-bold text-center mb-8">–ë–ª–æ–≥ üì∞</h2>
      <p className="text-base max-w-2xl text-center m-auto dark:text-neutral-400 mb-12">
        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–ª–æ–≥! –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ —Å–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –Ω–∞—à–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ —É—Å–ª—É–≥.
      </p>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
      <div className="flex justify-center flex-wrap">
        {categories.map(renderCategoryButton)}
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8">
        {filteredPosts.map(({ title, image, excerpt, link }) => (
          <div
            key={title}
            className="bg-neutral-100 dark:bg-neutral-800 rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300 ease-in-out"
          >
            <Link href={link}>
              <div className="relative">
                <Image
                  src={image}
                  alt={title}
                  layout="responsive"
                  width={400}
                  height={225}
                  className="w-full h-48 object-cover transform transition-transform hover:scale-105"
                />
              </div>
            </Link>
            <div className="p-4">
              <h3 className="text-lg font-semibold mb-2">{title}</h3>
              <p className="text-sm text-neutral-600 dark:text-neutral-400 mb-4">
                {excerpt}
              </p>
              <div className="flex justify-end">
                <Link href={link}>
                  <button className="bg-red-500 text-white text-sm rounded-md px-4 py-2 transition-colors duration-300 hover:bg-red-600">
                    –ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ
                  </button>
                </Link>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}
