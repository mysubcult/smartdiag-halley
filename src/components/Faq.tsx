import Image from "next/image";
import Link from "next/link";
import { useState } from "react";

const blogPosts = [
  {
    title: "–ö–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –æ—à–∏–±–∫–æ–π –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∞—Ä—Ö–∏–≤–∞",
    image: "/images/blog/post1.jpg",
    excerpt:
      "–£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç—ã–º–∏ –æ—à–∏–±–∫–∞–º–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∞—Ä—Ö–∏–≤–æ–≤ –∏ —á—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å —ç—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã.",
    link: "/blog/post1",
    category: "–û—à–∏–±–∫–∏",
  },
  {
    title: "–ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–ø—É—Å–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã",
    image: "/images/blog/post2.jpg",
    excerpt:
      "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–ª–∏ –∏—Å—á–µ–∑–∞—é—Ç —è—Ä–ª—ã–∫–∏? –†–µ—à–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã.",
    link: "/blog/post2",
    category: "–û—à–∏–±–∫–∏",
  },
  {
    title: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–∞ –¥—Ä—É–≥–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ",
    image: "/images/blog/post3.jpg",
    excerpt:
      "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∫–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö? –û—Ç–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.",
    link: "/blog/post3",
    category: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
  },
  {
    title: "–ü–æ–º–æ—â—å –≤ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è",
    image: "/images/blog/post4.jpg",
    excerpt:
      "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è. –ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏.",
    link: "/blog/post4",
    category: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û",
  },
  {
    title: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º –∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å—ã",
    image: "/images/blog/post5.jpg",
    excerpt:
      "–ö–∞–∫ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–Ω–æ–µ –ü–û –º–æ–∂–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ –≤–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è.",
    link: "/blog/post5",
    category: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
  },
  {
    title: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –Ω–∞—à–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º",
    image: "/images/blog/post6.jpg",
    excerpt:
      "–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ —Å–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.",
    link: "/blog/post6",
    category: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
  },
];

const categories = [
  { name: "–í—Å–µ", value: "–í—Å–µ" },
  { name: "–û—à–∏–±–∫–∏", value: "–û—à–∏–±–∫–∏" },
  { name: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û", value: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û" },
  { name: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", value: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å" },
  { name: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", value: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏" },
];

function classNames(...classes: string[]) {
  return classes.filter(Boolean).join(" ");
}

export default function Blog() {
  const [selectedCategory, setSelectedCategory] = useState("–í—Å–µ");
  const [isOpen, setIsOpen] = useState(false);

  const filteredPosts =
    selectedCategory === "–í—Å–µ"
      ? blogPosts
      : blogPosts.filter((post) => post.category === selectedCategory);

  return (
    <div className="bg-white dark:bg-neutral-900 w-full px-4 pt-16 pb-16" id="blog">
      <h2 className="text-4xl font-bold text-center">–ë–ª–æ–≥ üì∞(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)</h2>
      <p className="pt-6 pb-8 text-base max-w-2xl text-center m-auto dark:text-neutral-400">
        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–ª–æ–≥! –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ —Å–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –Ω–∞—à–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ —É—Å–ª—É–≥.
      </p>

      {/* –ü–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º –±–ª–æ–≥–∞ */}
      <div className="block sm:hidden">
        <button
          onClick={() => setIsOpen(!isOpen)}
          className="bg-gray-200 dark:bg-gray-800 text-gray-800 dark:text-gray-200 py-2 px-4 rounded-md w-full text-left"
        >
          {isOpen ? "–ó–∞–∫—Ä—ã—Ç—å —Ä–∞–∑–¥–µ–ª—ã" : selectedCategory}
        </button>
        {isOpen && (
          <div className="mt-2 space-y-1">
            {categories.map((category) => (
              <button
                key={category.value}
                onClick={() => {
                  setSelectedCategory(category.value);
                  setIsOpen(false); // –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                }}
                className={classNames(
                  category.value === selectedCategory
                    ? "bg-red-500 text-white"
                    : "text-gray-700 dark:text-gray-200 hover:bg-red-500 hover:text-white transition-colors duration-300",
                  "block px-3 py-2 rounded-md text-base font-medium w-full text-left"
                )}
              >
                {category.name}
              </button>
            ))}
          </div>
        )}
      </div>

      <div className="hidden sm:block">
        <nav className="flex justify-center">
          <div className="relative text-base font-semibold mt-6 bg-neutral-200 dark:bg-neutral-800 rounded-lg inline-flex flex-wrap justify-center sm:mt-8">
            {categories.map((category) => (
              <button
                key={category.value}
                onClick={() => setSelectedCategory(category.value)}
                className={classNames(
                  category.value === selectedCategory
                    ? "bg-white dark:bg-neutral-600 text-neutral-900 dark:text-neutral-100"
                    : "text-neutral-900 dark:text-neutral-400",
                  "rounded-md m-1 py-2 px-4 whitespace-nowrap hover:bg-white dark:hover:bg-neutral-700 transition-colors duration-300 ease-in-out"
                )}
              >
                {category.name}
              </button>
            ))}
          </div>
        </nav>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-5xl mx-auto mt-8">
        {filteredPosts.map(({ title, image, excerpt, link }) => (
          <div
            key={title}
            className="bg-neutral-100 dark:bg-neutral-800 rounded-lg overflow-hidden shadow-md transition-transform transform hover:shadow-lg duration-300 ease-in-out flex flex-col min-h-[450px]" // –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –∫–∞—Ä—Ç–æ—á–µ–∫
          >
            <Link href={link}>
              <div className="border-4 border-neutral-300 dark:border-neutral-700 p-1 hover:border-red-500 dark:hover:border-red-500 transition-colors duration-300">
                <Image
                  src={image}
                  alt={title}
                  width={400}
                  height={225}
                  className="w-full h-48 object-cover"
                />
              </div>
            </Link>
            <div className="flex flex-col justify-between p-6 h-full">
              <div>
                <h3 className="text-lg font-semibold mb-2">{title}</h3>
                <p className="text-sm text-neutral-600 dark:text-neutral-400 mb-4">
                  {excerpt}
                </p>
              </div>
              <div className="flex justify-end mt-auto">
                <Link href={link}>
                  <button className="bg-red-500 text-white text-sm rounded-md px-4 py-2 transition-colors duration-300 hover:bg-red-600">
                    –ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ
                  </button>
                </Link>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}
